#Command lines for Figure 1
#Updated on December 14, 2020

#Step1: simulations in SliM
>> slim -d d_seed=${seed} -d d_f0=100 -d d_f1=0 -d d_f2=0 -d d_f3=0 -d "d_simID='0'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
>> slim -d d_seed=${seed} -d d_f0=10 -d d_f1=70 -d d_f2=10 -d d_f3=10 -d "d_simID='1'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
>> slim -d d_seed=${seed} -d d_f0=10 -d d_f1=10 -d d_f2=70 -d d_f3=10 -d "d_simID='2'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
>> slim -d d_seed=${seed} -d d_f0=10 -d d_f1=10 -d d_f2=10 -d d_f3=70 -d "d_simID='3'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim

#Possible inputs:
#${seed} = (any random seed of your choosing)
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)
#${demographic_model} - (eqm, growth, decline)
#${output_folder} = (folder that newly created .ms files will be output to)




#Step2: mask exonic regions:
>> python OtherScripts/mask_coding_regions_human.py ${path_to_chromosome} sim0 ${replicate_num} ${chromosome_num}
>> python OtherScripts/mask_coding_regions_human.py ${path_to_chromosome} sim1 ${replicate_num} ${chromosome_num}
>> python OtherScripts/mask_coding_regions_human.py ${path_to_chromosome} sim2 ${replicate_num} ${chromosome_num}
>> python OtherScripts/mask_coding_regions_human.py ${path_to_chromosome} sim3 ${replicate_num} ${chromosome_num}

#Possible inputs:
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)

#Step3: Randomly sample N haplotypes from the 100 haplotypes present in an .ms file
>> python OtherScripts/subsample_ms.py output_genome${replicate_num}_chr${chromosome_num}_masked.ms sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim0_genome20_masked.ms 2
>> python OtherScripts/subsample_ms.py output_genome${replicate_num}_chr${chromosome_num}_masked.ms sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim1_genome20_masked.ms 2
>> python OtherScripts/subsample_ms.py output_genome${replicate_num}_chr${chromosome_num}_masked.ms sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim2_genome20_masked.ms 2
>> python OtherScripts/subsample_ms.py output_genome${replicate_num}_chr${chromosome_num}_masked.ms sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim3_genome20_masked.ms 2

#Possible inputs:
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)
#${demographic_model} = (eqm, growth, decline)



#Step4: make the input file (.tab format) for MSMC
>> less sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim0_genome20_masked.ms |python ms2multihetsep.py "sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim0_genome20_masked" 150003700 > converted_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim0_genome20_masked.tab
>> less sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim1_genome20_masked.ms |python ms2multihetsep.py "sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim1_genome20_masked" 150003700 > converted_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim1_genome20_masked.tab
>> less sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim2_genome20_masked.ms |python ms2multihetsep.py "sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim2_genome20_masked" 150003700 > converted_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim2_genome20_masked.tab
>> less sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim3_genome20_masked.ms |python ms2multihetsep.py "sampled_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim3_genome20_masked" 150003700 > converted_150Mb_2indv_genome${replicate_num}_chr${chromosome_num}_${demographic_model}_sim3_genome20_masked.tab

#ms2multihetsep.py was provided in the MSMC Tools folder (XXXXXXXXXlinkXXXXXXXXXXX)

#Possible inputs:
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)
#${demographic_model} = (eqm, growth, decline)



#Step5: run MSMC
>> msmc_1.1.0_linux64bit -r 1.0 -t 1 -o raw_output_150Mb_2indv_genome${replicate_num}_${demographic_model}_sim0_genome20_masked converted_150Mb_2indv_genome${replicate_num}_chr1_${demographic_model}_sim0_genome20_masked.tab converted_150Mb_2indv_genome${replicate_num}_chr2_${demographic_model}_sim0_genome20_masked.tab ... converted_150Mb_2indv_genome${replicate_num}_chr22_${demographic_model}_sim0_genome20_masked.tab
>> msmc_1.1.0_linux64bit -r 1.0 -t 1 -o raw_output_150Mb_2indv_genome${replicate_num}_${demographic_model}_sim1_genome20_masked converted_150Mb_2indv_genome${replicate_num}_chr1_${demographic_model}_sim1_genome20_masked.tab converted_150Mb_2indv_genome${replicate_num}_chr2_${demographic_model}_sim1_genome20_masked.tab ... converted_150Mb_2indv_genome${replicate_num}_chr22_${demographic_model}_sim1_genome20_masked.tab
>> msmc_1.1.0_linux64bit -r 1.0 -t 1 -o raw_output_150Mb_2indv_genome${replicate_num}_${demographic_model}_sim2_genome20_masked converted_150Mb_2indv_genome${replicate_num}_chr1_${demographic_model}_sim2_genome20_masked.tab converted_150Mb_2indv_genome${replicate_num}_chr2_${demographic_model}_sim2_genome20_masked.tab ... converted_150Mb_2indv_genome${replicate_num}_chr22_${demographic_model}_sim2_genome20_masked.tab
>> msmc_1.1.0_linux64bit -r 1.0 -t 1 -o raw_output_150Mb_2indv_genome${replicate_num}_${demographic_model}_sim3_genome20_masked converted_150Mb_2indv_genome${replicate_num}_chr1_${demographic_model}_sim3_genome20_masked.tab converted_150Mb_2indv_genome${replicate_num}_chr2_${demographic_model}_sim3_genome20_masked.tab ... converted_150Mb_2indv_genome${replicate_num}_chr22_${demographic_model}_sim3_genome20_masked.tab

#Possible inputs:
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)
#${demographic_model} = (eqm, growth, decline)



#Step6: make SFS for varying SNP densities
python OtherScripts/SFS_maker_human_genome_all_SNPs.py ${input_filenames} 118424753 ratio_file_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}.txt MASTER_all_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs
python OtherScripts/SFS_maker_human_genome_thinned_SNPs.py ${input_filenames} 118424753 ratio_file_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}.txt MASTER_thinned_5kb_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs 5000

where ${input_filenames} = "output_genome1_chr1_masked output_genome1_chr2_masked ... output_genome1_chr22_masked"

#Possible inputs:
#${DFE} = (0, 1, 2, 3)
#${demographic_model} - (eqm, growth, decline)
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)
#ratio_file_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}.txt -> This is file that is created to proportionally scale down the d0_0 class of the SFS after masking for each replicate separately. This file is an output of the script "SFS_maker_single_chr_all_SNPs.py" and used as an input file in the script "SFS_maker_single_chr_thinned_SNPs.py".



#Step7: run fastsimcoal2
>> fsc26 -t Fastsimcoal2_Inputfiles/eqm.tpl -n 150000 -d -e Fastsimcoal2_Inputfiles/eqm.est -M -L 50 -q -T
#uses the SFS file Fastsimcoal2_Inputfiles_SFS/MASTER_thinned_5kb_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs
>> fsc26 -t Fastsimcoal2_Inputfiles/size_change_exponential.tpl -n 150000 -d -e Fastsimcoal2_Inputfiles/size_change_exponential.est -M -L 50 -q -T
#uses the SFS file Fastsimcoal2_Inputfiles_SFS/MASTER_thinned_5kb_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs
>> fsc26 -t Fastsimcoal2_Inputfiles/size_change_inst.tpl -n 150000 -d -e Fastsimcoal2_Inputfiles/size_change_inst.est -M -L 50 -q -T
#uses the SFS file Fastsimcoal2_Inputfiles_SFS/MASTER_thinned_5kb_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs
>> fsc26 -t Fastsimcoal2_Inputfiles/inst_bot.tpl -n 150000 -d -e Fastsimcoal2_Inputfiles/inst_bot.est -M -L 50 -q -T
#uses the SFS file Fastsimcoal2_Inputfiles_SFS/MASTER_thinned_5kb_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs

#Possible inputs:
#${DFE} = (0, 1, 2, 3)
#${demographic_model} - (eqm, growth, decline)
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)


#Step8: plot results
Use the "plot_msmc_and_fsc_results.py" script.  The scenario parameters, including the demographic model, exon density, DFE shape, SNP density, masking state, replicate number, and trial number, can be configured in the script itself. 
