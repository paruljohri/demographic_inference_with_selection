#Simulating human-like chromosomes using SliM and inferring demography using fastsimcoal2 
#Updated on December 7, 2020

#Step1: simulations in SliM
slim -d d_seed=${seed} -d d_f0=100 -d d_f1=0 -d d_f2=0 -d d_f3=0 -d "d_simID='0'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
slim -d d_seed=${seed} -d d_f0=10 -d d_f1=70 -d d_f2=10 -d d_f3=10 -d "d_simID='1'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
slim -d d_seed=${seed} -d d_f0=10 -d d_f1=10 -d d_f2=70 -d d_f3=10 -d "d_simID='2'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
slim -d d_seed=${seed} -d d_f0=10 -d d_f1=10 -d d_f2=10 -d d_f3=70 -d "d_simID='3'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
slim -d d_seed=${seed} -d d_f0=25 -d d_f1=25 -d d_f2=25 -d d_f3=25 -d "d_simID='4'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
slim -d d_seed=${seed} -d d_f0=50 -d d_f1=0 -d d_f2=0 -d d_f3=50 -d "d_simID='5'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim
slim -d d_seed=${seed} -d d_f0=70 -d d_f1=0 -d d_f2=0 -d d_f3=30 -d "d_simID='6'" -d "d_repID='${replicate_num}'" -d "d_chrNum='${chromosome_num}'" -d "d_folder='${output_folder}'" SlimScripts/${demographic_model}_dfe_150Mb_22chr_scaled_genome20.slim

#Possible inputs:
#${seed} = (any random seed of your choosing)
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)
#${demographic_model} - (eqm, growth, decline)
#${output_folder} = (folder that newly created .ms files will be output to)




#Step2: mask exonic regions:
python OtherScripts/mask_coding_regions_human.py ${path_to_chromosome} ${DFE} ${replicate_num} ${chromosome_num}

#Possible inputs:
#${DFE} = (0, 1, 2, 3, 4, 5, 6)
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)



#Step3: make SFS for varying SNP densities
python OtherScripts/SFS_maker_human_genome_all_SNPs.py ${input_filenames} 118424753 ratio_file_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}.txt MASTER_all_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs
python OtherScripts/SFS_maker_human_genome_thinned_SNPs.py ${input_filenames} 118424753 ratio_file_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}.txt MASTER_thinned_100kb_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs 100000

where ${input_filenames} = "output_genome1_chr1_masked output_genome1_chr2_masked ... output_genome1_chr21_masked output_genome1_chr22_masked" for all 22 chromosomes in the genome

#Possible inputs:
#${DFE} = (0, 1, 2, 3, 4, 5, 6)
#${demographic_model} = (eqm, growth, decline)
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
#${chromosome_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)
#ratio_file_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}.txt -> This is file that is created to proportionally scale down the d0_0 class of the SFS after masking for each replicate separately. This file is an output of the script "SFS_maker_single_chr_all_SNPs.py" and used as an input file in the script "SFS_maker_single_chr_thinned_SNPs.py".




#Step4: run fastsimcoal2
fsc26 -t Fastsimcoal2_Inputfiles/${tested_model}.tpl -n 150000 -d -e Fastsimcoal2_Inputfiles/${tested_model}.est -M -L 50 -q -T
#uses the SFS file Fastsimcoal2_Inputfiles_SFS/MASTER_thinned_100kb_${demographic_model}_masked_genome20_sim${DFE}_rep${replicate_num}_DAFpop0.obs

#Possible inputs:
#${DFE} = (0, 1, 2, 3, 4, 5, 6)
#${tested_model} = (eqm, size_change_exponential, size_change_inst, inst_bot)
#${demographic_model} = (eqm, growth, decline)
#${replicate_num} = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)


#Step5: plot results
Use the "AIC_model_choice_human_genome.py" script. The scenario parameters, including the demographic model, exon density, DFE shape, SNP density, masking state, replicate number, and trial number, can be configured in the script itself. The script will perform an AIC calculation, the penalty of which can be configured to "2 x number of parameters", to determine which model is best for each replicate.
